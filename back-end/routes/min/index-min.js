var express=require("express"),router=express.Router(),mongoose=require("mongoose"),mongoUrl="mongodb://localhost:27017/ecommerce",User=require("../models/user_model.js");mongoose.connect(mongoUrl);var bcrypt=require("bcrypt-nodejs"),randToken=require("rand-token").uid;router.get("/",function(e,o,n){o.render("index",{title:"Express"})}),router.post("/register",function(e,o,n){User.findOne({username:e.body.username},function(n,s){if(s===e.body.username)e.body.password!==e.body.password2?o.json({message:"no match",taken:"inUse"}):o.json({taken:"inUse"});else if(e.body.password!==e.body.password2)o.json({message:"no match"});else{var r=e.body.username,a=e.body.password,t=e.body.email,u=randToken(32),d=Date.now(),i=new User({username:r,password:bcrypt.hashSync(a),email:t,token:u});i.save(function(e,n){e?o.json({message:"errorAdding"}):o.json({message:"User Added",username:r,token:u})})}})}),router.post("/login",function(e,o,n){User.findOne({username:e.body.username},function(n,s){if(null===s)o.json({failure:"noUser"});else{var r=bcrypt.compareSync(e.body.password,s.password),a=randToken(32),t=Date.now();r?(User.update({username:s.username},{token:a,tokenExpDate:t}).exec(),o.json({success:"userFound",username:s.username,token:a,tokenExpDate:t})):o.json({failure:"badPass"})}})}),router.get("/getUserData",function(e,o,n){var s=e.query.token;void 0===s?o.json({failure:"noToken"}):User.findOne({token:s},function(e,n){null===n?o.json({failure:"badToken"}):o.json({username:n.username,grind:n.grind,frequency:n.frequency,token:n.token})}),router.get("/options",function(e,o,n){o.json({message:"success"})})}),router.get("/options",function(e,o,n){User.update({username:e.body.username},{weeklyTotal:e.body.weeklyTotal,grindType:e.body.grindType}).exec(),o.json({message:"updated"})}),module.exports=router;